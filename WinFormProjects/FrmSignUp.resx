<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>